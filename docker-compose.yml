services:
  frontend:
    build:
      context: ./mycelium
      dockerfile: Dockerfile
      args:
        - AUTHENTIK_HOST=${AUTHENTIK_HOST}
        - AUTHENTIK_PORT=${AUTHENTIK_PORT}
        - AUTHENTIK_CLIENT_ID=${AUTHENTIK_CLIENT_ID}
        - AUTHENTIK_CLIENT_SECRET=${AUTHENTIK_CLIENT_SECRET}
        - BACKEND_HOST=${BACKEND_HOST}
        - BACKEND_PORT=${BACKEND_PORT}
        - FRONTEND_PORT=${FRONTEND_PORT}
        - FRONTEND_HOST=${FRONTEND_HOST}
    container_name: frontend
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - shared-network
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${FRONTEND_HOST}:${FRONTEND_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BACKEND_HOST=${BACKEND_HOST}
        - BACKEND_PORT=${BACKEND_PORT}
        - AUTHENTIK_HOST=${AUTHENTIK_HOST}
        - AUTHENTIK_PORT=${AUTHENTIK_PORT}
        - AUTHENTIK_CLIENT_ID=${AUTHENTIK_CLIENT_ID}
        - AUTHENTIK_CLIENT_SECRET=${AUTHENTIK_CLIENT_SECRET}
        - DATABASE_URL=${DATABASE_URL}
    container_name: backend
    ports:
      - "${BACKEND_PORT}:8000"
    networks:
      - shared-network
    volumes:
      - ./backend/app/database:/app/database
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${BACKEND_HOST}:${BACKEND_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  shared-network:
    name: shared-network

volumes:
  backend-database:
    driver: local
