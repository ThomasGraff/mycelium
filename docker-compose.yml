services:
  frontend:
    build:
      context: ./frontend/mycelium
      dockerfile: Dockerfile
      args:
        - AUTHENTIK_HOST=authentik-server
        - AUTHENTIK_PORT=${AUTHENTIK_PORT}
        - BACKEND_HOST=backend
        - BACKEND_PORT=${BACKEND_PORT}
    container_name: frontend
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    networks:
      - shared-network
    depends_on:
      - backend
      - authentik-server
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=${BACKEND_PORT}
      - AUTHENTIK_HOST=authentik-server
      - AUTHENTIK_PORT=${AUTHENTIK_PORT}
      - NGINX_LOG_LEVEL=debug

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - shared-network
    environment:
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./app/database/mycelium.db}
    volumes:
      - ./backend/app/database:/app/database

  authentik-postgresql:
    extends:
      file: authentik-base.yml
      service: authentik-postgresql
    networks:
      - shared-network

  authentik-redis:
    extends:
      file: authentik-base.yml
      service: authentik-redis
    networks:
      - shared-network

  authentik-server:
    extends:
      file: authentik-base.yml
      service: authentik-server
    networks:
      - shared-network

  authentik-worker:
    extends:
      file: authentik-base.yml
      service: authentik-worker
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge

volumes:
  authentik-database:
    driver: local
  authentik-redis:
    driver: local
  backend-database:
    driver: local
