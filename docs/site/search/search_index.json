{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"data_contract_models/data_contract/","title":"DataContract","text":"<p>Represents a Data Contract following the specifications from datacontract.com.</p>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.data_contract_specification","title":"data_contract_specification  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data_contract_specification: str = Field(\n    ...,\n    description=\"REQUIRED. Specifies the Data Contract Specification being used.\",\n    validation_alias=AliasChoices(\n        \"data_contract_specification\",\n        \"dataContractSpecification\",\n    ),\n    example=\"0.9.3\",\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(\n    ...,\n    description=\"REQUIRED. An organization-wide unique technical identifier.\",\n    example=\"urn:datacontract:checkout:orders-latest\",\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.info","title":"info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>info: InfoObject = Field(\n    ...,\n    description=\"REQUIRED. Specifies the metadata of the data contract.\",\n    example=model_config[\"json_schema_extra\"][\"example\"],\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.servers","title":"servers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>servers: Optional[Dict[str, ServerObject]] = Field(\n    None,\n    description=\"Specifies the servers of the data contract.\",\n    example={\n        \"production\": model_config[\"json_schema_extra\"][\n            \"example\"\n        ]\n    },\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.terms","title":"terms  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>terms: Optional[TermObject] = Field(\n    None,\n    description=\"Specifies the terms and conditions of the data contract.\",\n    example=model_config[\"json_schema_extra\"][\"example\"],\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.models","title":"models  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>models: Optional[Dict[str, ModelObject]] = Field(\n    None,\n    description=\"Specifies the logical data model.\",\n    example={\n        \"orders\": model_config[\"json_schema_extra\"][\n            \"example\"\n        ]\n    },\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.definitions","title":"definitions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>definitions: Optional[Dict[str, DefinitionObject]] = Field(\n    None,\n    description=\"Specifies definitions.\",\n    example={\n        \"order_id\": model_config[\"json_schema_extra\"][\n            \"example\"\n        ]\n    },\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.examples","title":"examples  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>examples: Optional[List[ExampleObject]] = Field(\n    None,\n    description=\"Specifies example data sets for the data model.\",\n    example=[model_config[\"json_schema_extra\"][\"example\"]],\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.service_level","title":"service_level  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_level: Optional[ServiceLevelObject] = Field(\n    None,\n    description=\"Specifies the service level of the provided data.\",\n    example=model_config[\"json_schema_extra\"][\"example\"],\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.quality","title":"quality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quality: Optional[QualityObject] = Field(\n    None,\n    description=\"Specifies the quality attributes and checks.\",\n    example=model_config[\"json_schema_extra\"][\"example\"],\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.links","title":"links  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>links: Optional[Dict[str, HttpUrl]] = Field(\n    None,\n    description=\"Additional external documentation links.\",\n    example={\n        \"datacontractCli\": \"https://cli.datacontract.com\"\n    },\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.tags","title":"tags  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tags: Optional[List[str]] = Field(\n    None,\n    description=\"Custom metadata to provide additional context.\",\n    example=[\"checkout\", \"orders\", \"s3\"],\n)\n</code></pre>"},{"location":"data_contract_models/data_contract/#data_contract.DataContract.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    populate_by_name=True,\n    json_schema_extra={\n        \"example\": {\n            \"dataContractSpecification\": \"0.9.3\",\n            \"id\": \"urn:datacontract:checkout:orders-latest\",\n            \"info\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"tags\": [\"checkout\", \"orders\", \"s3\"],\n            \"links\": {\n                \"datacontractCli\": \"https://cli.datacontract.com\"\n            },\n            \"servers\": {\n                \"production\": model_config[\n                    \"json_schema_extra\"\n                ][\"example\"]\n            },\n            \"terms\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"models\": {\n                \"orders\": model_config[\"json_schema_extra\"][\n                    \"example\"\n                ]\n            },\n            \"definitions\": {\n                \"order_id\": model_config[\n                    \"json_schema_extra\"\n                ][\"example\"]\n            },\n            \"examples\": [\n                model_config[\"json_schema_extra\"][\"example\"]\n            ],\n            \"servicelevels\": model_config[\n                \"json_schema_extra\"\n            ][\"example\"],\n            \"quality\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n        }\n    },\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/","title":"DefinitionObject","text":"<p>Represents a definition object in a data contract.</p> <p>This class defines the structure and properties of a definition, including its name, type, domain, and various other attributes. It also allows for additional arbitrary key-value pairs.</p>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = Field(\n    ...,\n    description=\"REQUIRED. The technical name of this definition.\",\n    example=\"order_id\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: DataType = Field(\n    ...,\n    description=\"REQUIRED. The logical data type.\",\n    example=\"text\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.domain","title":"domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain: Optional[str] = Field(\n    \"global\",\n    description=\"The domain in which this definition is valid. Default: global.\",\n    example=\"checkout\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.title","title":"title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>title: Optional[str] = Field(\n    None,\n    description=\"The business name of this definition.\",\n    example=\"Order ID\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(\n    None,\n    description=\"Clear and concise explanations related to the domain.\",\n    example=\"An internal ID that identifies an order in the online shop.\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.enum","title":"enum  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>enum: Optional[List[str]] = Field(\n    None,\n    description=\"A value must be equal to one of the elements in this array value. Only evaluated if the value is not null.\",\n    example=[\n        \"PENDING\",\n        \"PROCESSING\",\n        \"SHIPPED\",\n        \"DELIVERED\",\n    ],\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.format","title":"format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>format: Optional[str] = Field(\n    None,\n    description=\"Specifies the format of the field (e.g., email, uri, uuid).\",\n    example=\"uuid\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.precision","title":"precision  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>precision: Optional[int] = Field(\n    38,\n    description=\"The maximum number of digits in a number. Only applies to numeric values.\",\n    example=10,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.scale","title":"scale  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scale: Optional[int] = Field(\n    0,\n    description=\"The maximum number of decimal places in a number. Only applies to numeric values.\",\n    example=2,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.min_length","title":"min_length  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>min_length: Optional[int] = Field(\n    None,\n    description=\"A value must be greater than, or equal to, the value of this. Only applies to unicode character sequences types.\",\n    example=10,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.max_length","title":"max_length  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_length: Optional[int] = Field(\n    None,\n    description=\"A value must be less than, or equal to, the value of this. Only applies to unicode character sequences types.\",\n    example=20,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.pattern","title":"pattern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pattern: Optional[str] = Field(\n    None,\n    description=\"A value must be valid according to the ECMA-262 regular expression dialect. Only applies to unicode character sequences types.\",\n    example=\"^[A-Za-z0-9]{8,14}$\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.minimum","title":"minimum  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>minimum: Optional[float] = Field(\n    None,\n    description=\"A value of a number must be greater than, or equal to, the value of this. Only applies to numeric values.\",\n    example=0,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.exclusive_minimum","title":"exclusive_minimum  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exclusive_minimum: Optional[float] = Field(\n    None,\n    description=\"A value of a number must be greater than the value of this. Only applies to numeric values.\",\n    example=0,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.maximum","title":"maximum  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>maximum: Optional[float] = Field(\n    None,\n    description=\"A value of a number must be less than, or equal to, the value of this. Only applies to numeric values.\",\n    example=1000000,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.exclusive_maximum","title":"exclusive_maximum  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exclusive_maximum: Optional[float] = Field(\n    None,\n    description=\"A value of a number must be less than the value of this. Only applies to numeric values.\",\n    example=1000000,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.example","title":"example  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>example: Optional[Any] = Field(\n    None,\n    description=\"An example value.\",\n    example=\"243c25e5-a081-43a9-aeab-6d5d5b6cb5e2\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.pii","title":"pii  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pii: Optional[bool] = Field(\n    None,\n    description=\"An indication, if this field contains Personal Identifiable Information (PII).\",\n    example=True,\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.classification","title":"classification  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>classification: Optional[str] = Field(\n    None,\n    description=\"The data class defining the sensitivity level for this field, according to the organization's classification scheme.\",\n    example=\"restricted\",\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.tags","title":"tags  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tags: Optional[List[str]] = Field(\n    None,\n    description=\"Custom metadata to provide additional context.\",\n    example=[\"orders\", \"checkout\"],\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.links","title":"links  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>links: Optional[Dict[str, HttpUrl]] = Field(\n    None,\n    description=\"Additional external documentation links.\",\n    example={\n        \"documentation\": \"https://docs.example.com/order-id\"\n    },\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.fields","title":"fields  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fields: Optional[Dict[str, FieldObject]] = Field(\n    None,\n    description=\"The nested fields of the object, record, or struct. Use only when type is object, record, or struct.\",\n    example={\n        \"street\": FieldObject(\n            type=\"string\", description=\"Street name\"\n        ),\n        \"number\": FieldObject(\n            type=\"integer\", description=\"House number\"\n        ),\n    },\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.items","title":"items  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>items: Optional[FieldObject] = Field(\n    None,\n    description=\"The type of the elements in the array. Use only when type is array.\",\n    example=FieldObject(\n        type=\"string\", description=\"Product SKU\"\n    ),\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.keys","title":"keys  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>keys: Optional[FieldObject] = Field(\n    None,\n    description=\"Describes the key structure of a map. Use only when type is map.\",\n    example=FieldObject(\n        type=\"string\", description=\"Country code\"\n    ),\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.values","title":"values  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>values: Optional[FieldObject] = Field(\n    None,\n    description=\"Describes the value structure of a map. Use only when type is map.\",\n    example=FieldObject(\n        type=\"string\", description=\"Country name\"\n    ),\n)\n</code></pre>"},{"location":"data_contract_models/definition_object/#definition_object.DefinitionObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    extra=\"allow\",\n    json_schema_extra={\n        \"example\": {\n            \"name\": \"order_id\",\n            \"type\": \"string\",\n            \"domain\": \"checkout\",\n            \"title\": \"Order Identifier\",\n            \"description\": \"A unique identifier for an order in our system.\",\n            \"format\": \"uuid\",\n            \"example\": \"243c25e5-a081-43a9-aeab-6d5d5b6cb5e2\",\n            \"pii\": True,\n            \"classification\": \"restricted\",\n            \"tags\": [\"order\", \"identifier\"],\n            \"links\": {\n                \"documentation\": \"https://docs.example.com/order-id\"\n            },\n            \"custom_field\": \"This is an extra field not defined in the model\",\n        }\n    },\n)\n</code></pre>"},{"location":"data_contract_models/example_object/","title":"ExampleObject","text":"<p>Represents an example object in a data contract.</p> <p>This class defines the structure and properties of an example, including its type, data, description, and associated model.</p>"},{"location":"data_contract_models/example_object/#example_object.ExampleObject.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: str = Field(\n    ...,\n    description=\"The type of the data product technology that implements the data contract.\",\n    examples=[\"csv\", \"json\", \"yaml\", \"custom\"],\n)\n</code></pre>"},{"location":"data_contract_models/example_object/#example_object.ExampleObject.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(\n    None,\n    description=\"An optional string describing the example.\",\n    example=\"An example list of order records.\",\n)\n</code></pre>"},{"location":"data_contract_models/example_object/#example_object.ExampleObject.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model: str = Field(\n    ...,\n    description=\"The reference to the model in the schema, e.g. a table name.\",\n    example=\"orders\",\n)\n</code></pre>"},{"location":"data_contract_models/example_object/#example_object.ExampleObject.data","title":"data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data: str = Field(\n    ...,\n    description=\"Example data for this model.\",\n    example='order_id,order_timestamp,order_total\\n\"1001\",\"2023-09-09T08:30:00Z\",2500\\n',\n)\n</code></pre>"},{"location":"data_contract_models/example_object/#example_object.ExampleObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    {\n        \"json_schema_extra\": {\n            \"example\": {\n                \"type\": \"csv\",\n                \"description\": \"An example list of order records.\",\n                \"model\": \"orders\",\n                \"data\": 'order_id,order_timestamp,order_total\\n\"1001\",\"2023-09-09T08:30:00Z\",2500\\n\"1002\",\"2023-09-08T15:45:00Z\",1800\\n\"1003\",\"2023-09-07T12:15:00Z\",3200\\n\"1004\",\"2023-09-06T19:20:00Z\",1500\\n\"1005\",\"2023-09-05T10:10:00Z\",4200\\n\"1006\",\"2023-09-04T14:55:00Z\",2800\\n\"1007\",\"2023-09-03T21:05:00Z\",1900\\n\"1008\",\"2023-09-02T17:40:00Z\",3600\\n\"1009\",\"2023-09-01T09:25:00Z\",3100\\n\"1010\",\"2023-08-31T22:50:00Z\",2700',\n            }\n        }\n    }\n)\n</code></pre>"},{"location":"data_contract_models/info_object/","title":"InfoObject","text":"<p>Represents the metadata information of a data contract.</p> <p>This class defines the structure for the 'info' section of a data contract, including details such as title, version, status, description, owner, and contact information.</p>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.title","title":"title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>title: str = Field(\n    ...,\n    description=\"REQUIRED. The title of the data contract.\",\n    example=\"Customer Orders Data Contract\",\n)\n</code></pre>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.version","title":"version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>version: str = Field(\n    ...,\n    description=\"REQUIRED. The version of the data contract document (which is distinct from the Data Contract Specification version or the Data Product implementation version).\",\n    example=\"1.0.0\",\n)\n</code></pre>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.status","title":"status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>status: Optional[\n    Literal[\n        \"proposed\",\n        \"in development\",\n        \"active\",\n        \"deprecated\",\n        \"retired\",\n    ]\n] = Field(\n    None,\n    description=\"The status of the data contract.\",\n    example=\"active\",\n)\n</code></pre>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(\n    None,\n    description=\"A description of the data contract.\",\n    example=\"This data contract defines the structure and rules for customer order data.\",\n)\n</code></pre>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.owner","title":"owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner: Optional[str] = Field(\n    None,\n    description=\"The owner or team responsible for managing the data contract and providing the data.\",\n    example=\"Customer Data Team\",\n)\n</code></pre>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.contact","title":"contact  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>contact: Optional[ContactObject] = Field(\n    None,\n    description=\"Contact information for the data contract.\",\n)\n</code></pre>"},{"location":"data_contract_models/info_object/#info_object.InfoObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    {\n        \"json_schema_extra\": {\n            \"example\": {\n                \"title\": \"Customer Orders Data Contract\",\n                \"version\": \"1.0.0\",\n                \"status\": \"active\",\n                \"description\": \"This data contract defines the structure and rules for customer order data.\",\n                \"owner\": \"Customer Data Team\",\n                \"contact\": model_config[\n                    \"json_schema_extra\"\n                ][\"example\"],\n            }\n        }\n    }\n)\n</code></pre>"},{"location":"data_contract_models/model_object/","title":"ModelObject","text":"<p>Represents a model object in a data contract.</p> <p>This class defines the structure and properties of a data model, such as tables, views, or structured files.</p>"},{"location":"data_contract_models/model_object/#model_object.ModelObject.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: str = Field(\n    default=\"table\",\n    description=\"The type of the model. Examples: table, view, object.\",\n    example=\"table\",\n)\n</code></pre>"},{"location":"data_contract_models/model_object/#model_object.ModelObject.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(\n    None,\n    description=\"An optional string describing the data model.\",\n    example=\"One record per order. Includes cancelled and deleted orders.\",\n)\n</code></pre>"},{"location":"data_contract_models/model_object/#model_object.ModelObject.title","title":"title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>title: Optional[str] = Field(\n    None,\n    description=\"An optional string for the title of the data model. Especially useful if the name of the model is cryptic or contains abbreviations.\",\n    example=\"Orders Latest\",\n)\n</code></pre>"},{"location":"data_contract_models/model_object/#model_object.ModelObject.fields","title":"fields  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fields: Dict[str, FieldObject] = Field(\n    ...,\n    description=\"The fields (e.g. columns) of the data model.\",\n    example={\n        \"order_id\": FieldObject(\n            description=\"Unique identifier for the order\",\n            type=\"string\",\n            format=\"uuid\",\n            required=True,\n            unique=True,\n            primary=True,\n            example=\"243c25e5-a081-43a9-aeab-6d5d5b6cb5e2\",\n        ),\n        \"order_timestamp\": FieldObject(\n            description=\"Timestamp of the order\",\n            type=\"timestamp\",\n            required=True,\n            example=\"2024-09-09T08:30:00Z\",\n        ),\n    },\n)\n</code></pre>"},{"location":"data_contract_models/model_object/#model_object.ModelObject.config","title":"config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>config: Optional[ConfigObject] = Field(\n    None,\n    description=\"Any additional key-value pairs that might be useful for further tooling.\",\n    example={\n        \"partition_key\": \"order_timestamp\",\n        \"clustering_key\": \"order_id\",\n    },\n)\n</code></pre>"},{"location":"data_contract_models/model_object/#model_object.ModelObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    json_schema_extra={\n        \"example\": {\n            \"type\": \"table\",\n            \"description\": \"One record per order. Includes cancelled and deleted orders.\",\n            \"title\": \"Orders Latest\",\n            \"fields\": {\n                \"order_id\": {\n                    \"description\": \"An internal ID that identifies an order in the online shop.\",\n                    \"type\": \"text\",\n                    \"format\": \"uuid\",\n                    \"required\": True,\n                    \"unique\": True,\n                    \"primary\": True,\n                    \"example\": \"243c25e5-a081-43a9-aeab-6d5d5b6cb5e2\",\n                    \"pii\": True,\n                    \"classification\": \"restricted\",\n                    \"tags\": [\"orders\"],\n                },\n                \"order_timestamp\": {\n                    \"description\": \"The business timestamp in UTC when the order was successfully registered in the source system and the payment was successful.\",\n                    \"type\": \"timestamp\",\n                    \"required\": True,\n                    \"example\": \"2024-09-09T08:30:00Z\",\n                },\n                \"order_total\": {\n                    \"description\": \"Total amount in the smallest monetary unit (e.g., cents).\",\n                    \"type\": \"long\",\n                    \"required\": True,\n                    \"example\": 9999,\n                },\n                \"customer_id\": {\n                    \"description\": \"Unique identifier for the customer.\",\n                    \"type\": \"text\",\n                    \"min_length\": 10,\n                    \"max_length\": 20,\n                    \"example\": \"1000000001\",\n                },\n                \"customer_email_address\": {\n                    \"description\": \"The email address, as entered by the customer. The email address was not verified.\",\n                    \"type\": \"text\",\n                    \"format\": \"email\",\n                    \"required\": True,\n                    \"pii\": True,\n                    \"classification\": \"sensitive\",\n                    \"example\": \"mary.taylor82@example.com\",\n                },\n                \"processed_timestamp\": {\n                    \"description\": \"The timestamp when the record was processed by the data platform.\",\n                    \"type\": \"timestamp\",\n                    \"required\": True,\n                    \"example\": \"2030-09-09T08:31:00Z\",\n                    \"config\": {\n                        \"jsonType\": \"string\",\n                        \"jsonFormat\": \"date-time\",\n                    },\n                },\n            },\n            \"config\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n        }\n    }\n)\n</code></pre>"},{"location":"data_contract_models/quality_object/","title":"QualityObject","text":"<p>Represents the quality object containing quality attributes and checks.</p> <p>:param str type: REQUIRED. The type of the schema (e.g., 'SodaCL', 'montecarlo', 'great-expectations', 'custom'). :param Union[SodaCLQualityObject, MonteCarloQualityObject, GreatExpectationsQualityObject, CustomQualityObject] specification: REQUIRED. The specification of the quality attributes.</p>"},{"location":"data_contract_models/quality_object/#quality_object.QualityObject.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: str = Field(\n    ...,\n    description=\"REQUIRED. The type of the schema.\",\n    example=\"SodaCL\",\n)\n</code></pre>"},{"location":"data_contract_models/quality_object/#quality_object.QualityObject.specification","title":"specification  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>specification: Union[\n    SodaCLQualityObject,\n    MonteCarloQualityObject,\n    GreatExpectationsQualityObject,\n    CustomQualityObject,\n] = Field(\n    ...,\n    description=\"REQUIRED. The specification of the quality attributes.\",\n    example=model_config[\"json_schema_extra\"][\"example\"],\n)\n</code></pre>"},{"location":"data_contract_models/quality_object/#quality_object.QualityObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    json_schema_extra={\n        \"example\": {\n            \"type\": \"SodaCL\",\n            \"specification\": model_config[\n                \"json_schema_extra\"\n            ][\"example\"],\n        }\n    }\n)\n</code></pre>"},{"location":"data_contract_models/server_object/","title":"ServerObject","text":"<p>Represents a server object in a data contract.</p> <p>This class defines the structure and properties of a server, including its type, description, environment, and other type-specific fields.</p>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: str = Field(\n    ...,\n    description=\"REQUIRED. The type of the data product technology that implements the data contract.\",\n    example=\"s3\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: Optional[str] = Field(\n    None,\n    description=\"An optional string describing the server.\",\n    example=\"One folder per model. One file per day.\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.environment","title":"environment  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>environment: Optional[str] = Field(\n    None,\n    description=\"An optional string describing the environment, e.g., prod, sit, stg.\",\n    example=\"prod\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.location","title":"location  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>location: Optional[str] = Field(\n    None,\n    description=\"S3 URL, starting with s3://\",\n    example=\"s3://datacontract-example-orders-latest/data/{model}/*.json\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.endpoint_url","title":"endpoint_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>endpoint_url: Optional[str] = Field(\n    None,\n    description=\"The server endpoint for S3-compatible servers\",\n    example=\"https://s3.amazonaws.com\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.format","title":"format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>format: Optional[str] = Field(\n    None,\n    description=\"Format of files, such as parquet, delta, json, csv\",\n    example=\"json\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.delimiter","title":"delimiter  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>delimiter: Optional[str] = Field(\n    None,\n    description=\"(Only for format = json) How multiple json documents are delimited within one file\",\n    example=\"new_line\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.project","title":"project  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>project: Optional[str] = Field(\n    None,\n    description=\"The GCP project name.\",\n    example=\"my-gcp-project\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.dataset","title":"dataset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dataset: Optional[str] = Field(\n    None,\n    description=\"The BigQuery dataset.\",\n    example=\"orders_dataset\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.account","title":"account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account: Optional[str] = Field(\n    None,\n    description=\"The Redshift account.\",\n    example=\"my-redshift-account\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.database","title":"database  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>database: Optional[str] = Field(\n    None,\n    description=\"The database name.\",\n    example=\"orders_db\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.schema","title":"schema  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>schema: Optional[str] = Field(\n    None, description=\"The schema name.\", example=\"public\"\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.cluster_identifier","title":"cluster_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cluster_identifier: Optional[str] = Field(\n    None,\n    description=\"Identifier of the Redshift cluster.\",\n    example=\"my-redshift-cluster\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.host","title":"host  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>host: Optional[str] = Field(\n    None,\n    description=\"Host of the Redshift cluster.\",\n    example=\"my-redshift-cluster.abcdefg.us-west-2.redshift.amazonaws.com\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.port","title":"port  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>port: Optional[int] = Field(\n    None,\n    description=\"Port of the Redshift cluster.\",\n    example=5439,\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.endpoint","title":"endpoint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>endpoint: Optional[str] = Field(\n    None,\n    description=\"Endpoint of the Redshift cluster.\",\n    example=\"my-redshift-cluster.abcdefg.us-west-2.redshift.amazonaws.com:5439\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.driver","title":"driver  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>driver: Optional[str] = Field(\n    None,\n    description=\"The name of the supported driver.\",\n    example=\"ODBC Driver 17 for SQL Server\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.catalog","title":"catalog  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>catalog: Optional[str] = Field(\n    None,\n    description=\"The name of the Hive or Unity catalog.\",\n    example=\"my_catalog\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.service_name","title":"service_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_name: Optional[str] = Field(\n    None,\n    description=\"The name of the Oracle service.\",\n    example=\"ORCL\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.topic","title":"topic  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>topic: Optional[str] = Field(\n    None,\n    description=\"The Kafka topic name.\",\n    example=\"orders_topic\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.stream","title":"stream  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stream: Optional[str] = Field(\n    None,\n    description=\"The name of the Kinesis data stream.\",\n    example=\"orders_stream\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.region","title":"region  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>region: Optional[str] = Field(\n    None,\n    description=\"AWS region, e.g., eu-west-1.\",\n    example=\"eu-west-1\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.path","title":"path  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>path: Optional[str] = Field(\n    None,\n    description=\"The relative or absolute path to the data file(s).\",\n    example=\"/data/orders/*.json\",\n)\n</code></pre>"},{"location":"data_contract_models/server_object/#server_object.ServerObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    json_schema_extra={\n        \"example\": {\n            \"type\": \"s3\",\n            \"description\": \"Example S3 server\",\n            \"environment\": \"prod\",\n            \"location\": \"s3://datacontract-example-orders-latest/data/{model}/*.json\",\n            \"format\": \"json\",\n            \"delimiter\": \"new_line\",\n        }\n    }\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/","title":"ServiceLevelObject","text":"<p>Represents the service levels for a data contract.</p> <p>This class defines various service level attributes such as availability, retention, latency, freshness, frequency of data delivery, support, and backup.</p>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.availability","title":"availability  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>availability: Optional[AvailabilityObject] = Field(\n    None, description=\"Availability service level.\"\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.retention","title":"retention  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>retention: Optional[RetentionObject] = Field(\n    None, description=\"Data retention service level.\"\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.latency","title":"latency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>latency: Optional[LatencyObject] = Field(\n    None, description=\"Latency service level.\"\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.freshness","title":"freshness  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freshness: Optional[FreshnessObject] = Field(\n    None, description=\"Data freshness service level.\"\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.frequency","title":"frequency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>frequency: Optional[FrequencyObject] = Field(\n    None,\n    description=\"Data delivery frequency service level.\",\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.support","title":"support  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>support: Optional[SupportObject] = Field(\n    None, description=\"Support service level.\"\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.backup","title":"backup  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>backup: Optional[BackupObject] = Field(\n    None, description=\"Backup service level.\"\n)\n</code></pre>"},{"location":"data_contract_models/service_level_object/#service_level_object.ServiceLevelObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    json_schema_extra={\n        \"example\": {\n            \"availability\": model_config[\n                \"json_schema_extra\"\n            ][\"example\"],\n            \"retention\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"latency\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"freshness\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"frequency\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"support\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n            \"backup\": model_config[\"json_schema_extra\"][\n                \"example\"\n            ],\n        }\n    }\n)\n</code></pre>"},{"location":"data_contract_models/term_object/","title":"TermObject","text":"<p>Represents the terms and conditions of a data contract.</p> <p>This class defines the structure for the 'terms' section of a data contract, including details such as usage terms, limitations, billing information, and notice period.</p>"},{"location":"data_contract_models/term_object/#term_object.TermObject.usage","title":"usage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>usage: Optional[str] = Field(\n    None,\n    description=\"The way the data is expected to be used. Can contain business and technical information.\",\n    example=\"Data can be used for reports, analytics and machine learning use cases.\",\n)\n</code></pre>"},{"location":"data_contract_models/term_object/#term_object.TermObject.limitations","title":"limitations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limitations: Optional[str] = Field(\n    None,\n    description=\"Restrictions on how the data can be used, including technical limitations or usage restrictions.\",\n    example=\"Not suitable for real-time use cases. Data may not be used to identify individual customers.\",\n)\n</code></pre>"},{"location":"data_contract_models/term_object/#term_object.TermObject.billing","title":"billing  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>billing: Optional[str] = Field(\n    None,\n    description=\"The pricing model for using the data (e.g., free, monthly fee, or metered pay-per-use).\",\n    example=\"5000 USD per month\",\n)\n</code></pre>"},{"location":"data_contract_models/term_object/#term_object.TermObject.notice_period","title":"notice_period  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>notice_period: Optional[str] = Field(\n    None,\n    description=\"Period of time required to terminate or modify the data usage agreement. Uses ISO-8601 format.\",\n    example=\"P3M\",\n)\n</code></pre>"},{"location":"data_contract_models/term_object/#term_object.TermObject.model_config","title":"model_config  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model_config = ConfigDict(\n    json_schema_extra={\n        \"example\": {\n            \"usage\": \"Data can be used for reports, analytics and machine learning use cases.\",\n            \"limitations\": \"Not suitable for real-time use cases. Data may not be used to identify individual customers.\",\n            \"billing\": \"5000 USD per month\",\n            \"notice_period\": \"P3M\",\n        }\n    }\n)\n</code></pre>"},{"location":"home/welcome/","title":"Mycelium","text":"<p>Documentation for version: v1.0.0</p> <p>Mycelium is a powerful backend system designed to handle Data Contracts efficiently. It provides a robust infrastructure for creating, managing, and querying data contracts, ensuring data consistency and reliability across various applications and services.</p>"},{"location":"home/why/","title":"Why using Mycelium?","text":"<ul> <li>Powered by Data Contracts \u2014 Mycelium uses a standardized Data Contract format, making it easy to define, validate, and share data structures across your organization.</li> <li>Fast and Efficient \u2014 Built with performance in mind, Mycelium can handle large volumes of data contracts with ease.</li> <li>Flexible API \u2014 Our RESTful API allows for seamless integration with various applications and services.</li> <li>Versioning Support \u2014 Keep track of changes to your data contracts with built-in versioning capabilities.</li> <li>Ecosystem Integration \u2014 Mycelium works well with popular data management and analytics tools, enhancing your data infrastructure.</li> </ul> <p>Installing Mycelium is as simple as: <code>pip install mycelium</code></p>"}]}