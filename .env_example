###############################################################################
#                          Authentik Configuration                              #
###############################################################################

# Port on which Authentik server will listen
AUTHENTIK_PORT=9000

# Port on which Authentik server will listen for HTTPS traffic
AUTHENTIK_PORT_HTTPS=9443

# Hostname for the Authentik service in the Docker network
AUTHENTIK_HOST=localhost

# Docker image repository for Authentik server
AUTHENTIK_IMAGE=ghcr.io/goauthentik/server

# Specific version tag of Authentik to use
AUTHENTIK_TAG=2024.8.3

# Email for the admin user
AUTHENTIK_BOOTSTRAP_EMAIL=admin@localhost

# Secret key for JWT token generation (can be generated with `openssl rand -base64 60 | tr -d '\n'`)
AUTHENTIK_SECRET_KEY=

# Password for the admin user (can be generated with `openssl rand -base64 16`)
AUTHENTIK_ADMIN_PASSWORD=

# API token for the admin user (can be generated with `openssl rand -hex 32`)
AUTHENTIK_ADMIN_TOKEN=

# Client ID for the backend service (will be filled during authentik setup via authentik API)
AUTHENTIK_CLIENT_ID=your_client_id

# Client secret for the backend service (will be filled during authentik setup via authentik API)
AUTHENTIK_CLIENT_SECRET=your_client_secret

# PostgreSQL user
PG_USER=authentik

# PostgreSQL database name
PG_DB=authentik

# Password for PostgreSQL database used by Authentik (can be generated with `openssl rand -base64 36 | tr -d '\n'`)
PG_PASS=

###############################################################################
#                            JWT Configuration                                  #
###############################################################################

# Expiration time for access tokens in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Secret key for JWT token generation (can be generated with `openssl rand -base64 36 | tr -d '\n'`)
SECRET_KEY=

###############################################################################
#                       Backend Service Configuration                           #
###############################################################################

# Port on which the FastAPI backend service will listen
BACKEND_PORT=8000

# Hostname for the backend service in the Docker network
BACKEND_HOST=localhost

# SQLite database connection string for the application
DATABASE_URL=sqlite:///./app/database/mycelium.db

###############################################################################
#                       Frontend Service Configuration                          #
###############################################################################

# Port on which the Vue.js frontend will be served
FRONTEND_PORT=8080

# Hostname for the frontend service in the Docker network
FRONTEND_HOST=localhost

# Logging level for Nginx reverse proxy (debug, info, notice, warn, error, crit)
NGINX_LOG_LEVEL=error